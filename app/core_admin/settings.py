"""
Django settings for core_admin project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'oj!)m7e8z%a#^i*uns-iu^pfuu_n3k^l)vs!@_lyyvps#6m825'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
	'localhost',
	'ca-app',
]

# Application definition
INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.gis',
	'core_admin',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core_admin.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'core_admin.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
db_base = {
	'ENGINE': 'django.contrib.gis.db.backends.postgis',
	'USER': os.getenv('POSTGRES_USER', 'user'),
	'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'password'),
	'HOST': os.getenv('POSTGRES_HOST', 'postgis'),
	'PORT': os.getenv('POSTGRES_PORT', 5432)
}

DATABASES = {
	'default': {
	# 	'ENGINE': 'django.db.backends.sqlite3',
	# 	'NAME': BASE_DIR / 'db.sqlite3',
	# },
	# 'admin': {
		'NAME': os.getenv('ADMIN_POSTGRES_DB', 'core_admin'),
		'OPTIONS': {
			'options': '-c search_path=public'
		},
		'TEST': {
			'NAME': 'test_admin',
			'DEPENDENCIES': [],
		},
	},
	'app': {
		'NAME': os.getenv('POSTGRES_DB', 'geosite'),
		'OPTIONS': {
			'options': '-c search_path=public'
		},
		'TEST': {
			'NAME': os.getenv('TEST_POSTGRES_DB', 'test_app'),
			'DEPENDENCIES': [],
		},
	},
}

DATABASES['default'].update(db_base)
DATABASES['app'].update(db_base)

DATABASE_ROUTERS = [
	'core_admin.db_routers.AppRouter',
]

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
